"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(){function i(){t.height(0),e.removeClass("team-member__name--active"),"column"==r.css("flex-direction")?n.height(0):n.height("auto")}var r=$(".team-member"),e=$(".team-member__name"),t=$(".team-member__info"),n=$(".team-member__photo");$(window).on("resize",i),e.on("click",function(){var e=$(this).parents(".team-member").find(".team-member__info"),t=$(this).parents(".team-member").find(".team-member__photo"),n=0;i(),"column"==r.css("flex-direction")&&(0==t.height()?t.height(290):t.height(0)),e.children().each(function(){n+=$(this).outerHeight()}),0==e.height()?(e.height(n),$(this).toggleClass("team-member__name--active")):e.height(0)})}(),function(){function o(){var e=$(window).width();return 768<e?500:480<e?e-t.width()*t.length:e-t.width()}function a(e,t){e.removeClass(t),n.width(0)}function l(e){return $(e).parent().find(e)}var t=$(".recipe__title"),e=$(".recipe__close"),n=$(".recipe__content");t.on("click",function(e){var t,n,i,r;e.preventDefault(),$(".recipe__desc").outerWidth(o()),t=e.currentTarget,n=".recipe",i="recipe--active",r=t.closest(n),e=l(n),t=$(r).find(".recipe__content"),n=o(),$(r).hasClass(i)?a(e,i):(a(e,i),t.width(n),$(r).addClass(i))}),e.on("click",function(e){e.preventDefault(),a(l(".recipe"),"recipe--active")})}(),function(e){"function"==typeof define&&define.amd&&define.amd.jQuery?define(["jquery"],e):e("undefined"!=typeof module&&module.exports?require("jquery"):jQuery)}(function(le){function i(e,a){function t(e){if(!(!0===G.data(De+"_intouch")||0<le(e.target).closest(a.excludedElements,G).length)){var t=e.originalEvent||e;if(!t.pointerType||"mouse"!=t.pointerType||0!=a.fallbackToMouseEvents){var n,i=t.touches,r=i?i[0]:t;return Z=Se,i?J=i.length:!1!==a.preventDefaultEvents&&e.preventDefault(),V=B=U=null,F=1,Q=z=Y=X=H=0,(e={})[ue]=O(ue),e[ce]=O(ce),e[se]=O(se),e[de]=O(de),W=e,E(),L(0,r),!i||J===a.fingers||a.fingers===Ee||v()?(ee=P(),2==J&&(L(1,i[1]),Y=z=M(K[0].start,K[1].start)),(a.swipeStatus||a.pinchStatus)&&(n=c(t,Z))):n=!1,!1===n?(c(t,Z=ke),n):(a.hold&&(ae=setTimeout(le.proxy(function(){G.trigger("hold",[t.target]),a.hold&&(n=a.hold.call(G,t,t.target))},this),a.longTapThreshold)),S(!0),null)}}}function n(e){var t,n,i,r,o=e.originalEvent||e;Z===$e||Z===ke||_()||(t=$((n=o.touches)?n[0]:o),te=P(),n&&(J=n.length),a.hold&&clearTimeout(ae),Z=Le,2==J&&(0==Y?(L(1,n[1]),Y=z=M(K[0].start,K[1].start)):($(n[1]),z=M(K[0].end,K[1].end),K[0].end,K[1].end,V=F<1?pe:fe),F=(z/Y*1).toFixed(2),Q=Math.abs(Y-z)),J===a.fingers||a.fingers===Ee||!n||v()?(U=D(t.start,t.end),function(e,t){if(!1!==a.preventDefaultEvents)if(a.allowPageScroll===he)e.preventDefault();else{var n=a.allowPageScroll===ve;switch(t){case ue:(a.swipeLeft&&n||!n&&a.allowPageScroll!=Te)&&e.preventDefault();break;case ce:(a.swipeRight&&n||!n&&a.allowPageScroll!=Te)&&e.preventDefault();break;case se:(a.swipeUp&&n||!n&&a.allowPageScroll!=xe)&&e.preventDefault();break;case de:(a.swipeDown&&n||!n&&a.allowPageScroll!=xe)&&e.preventDefault()}}}(e,B=D(t.last,t.end)),i=t.start,r=t.end,H=Math.round(Math.sqrt(Math.pow(r.x-i.x,2)+Math.pow(r.y-i.y,2))),X=C(),n=H,(e=U)!=he&&(n=Math.max(n,k(e)),W[e].distance=n),r=c(o,Z),a.triggerOnTouchEnd&&!a.triggerOnTouchLeave||(i=!0,a.triggerOnTouchLeave&&(e={left:(n=(e=le(e=this)).offset()).left,right:n.left+e.outerWidth(),top:n.top,bottom:n.top+e.outerHeight()},t=t.end,e=e,i=t.x>e.left&&t.x<e.right&&t.y>e.top&&t.y<e.bottom),!a.triggerOnTouchEnd&&i?Z=u(Le):a.triggerOnTouchLeave&&!i&&(Z=u($e)),Z!=ke&&Z!=$e||c(o,Z))):c(o,Z=ke),!1===r&&c(o,Z=ke))}function i(e){var t,n=e.originalEvent||e,i=n.touches;if(i){if(i.length&&!_())return t=n,ne=P(),ie=t.touches.length+1,!0;if(i.length&&_())return!0}return _()&&(J=ie),te=P(),X=C(),f()||!d()?c(n,Z=ke):a.triggerOnTouchEnd||!1===a.triggerOnTouchEnd&&Z===Le?(!1!==a.preventDefaultEvents&&e.preventDefault(),c(n,Z=$e)):!a.triggerOnTouchEnd&&b()?s(n,Z=$e,we):Z===Le&&c(n,Z=ke),S(!1),null}function r(){z=Y=ee=te=J=0,E(),S(!(F=1))}function o(e){e=e.originalEvent||e;a.triggerOnTouchLeave&&c(e,Z=u($e))}function l(){G.unbind(q,t),G.unbind(j,r),G.unbind(I,n),G.unbind(A,i),N&&G.unbind(N,o),S(!1)}function u(e){var t=e,n=p(),i=d(),r=f();return!n||r?t=ke:!i||e!=Le||a.triggerOnTouchEnd&&!a.triggerOnTouchLeave?!i&&e==$e&&a.triggerOnTouchLeave&&(t=ke):t=$e,t}function c(e,t){var n,i=e.touches;return(g()&&m()||m())&&(n=s(e,t,ge)),(h()&&v()||v())&&!1!==n&&(n=s(e,t,me)),x()&&T()&&!1!==n?n=s(e,t,ye):X>a.longTapThreshold&&H<_e&&a.longTap&&!1!==n?n=s(e,t,be):1!==J&&Oe||!(isNaN(H)||H<a.threshold)||!b()||!1===n||(n=s(e,t,we)),t===ke&&r(),t===$e&&(i&&i.length||r()),n}function s(e,t,n){var i;if(n==ge){if(G.trigger("swipeStatus",[t,U||null,H||0,X||0,J,K,B]),a.swipeStatus&&!1===(i=a.swipeStatus.call(G,e,t,U||null,H||0,X||0,J,K,B)))return!1;if(t==$e&&g()){if(clearTimeout(oe),clearTimeout(ae),G.trigger("swipe",[U,H,X,J,K,B]),a.swipe&&!1===(i=a.swipe.call(G,e,U,H,X,J,K,B)))return!1;switch(U){case ue:G.trigger("swipeLeft",[U,H,X,J,K,B]),a.swipeLeft&&(i=a.swipeLeft.call(G,e,U,H,X,J,K,B));break;case ce:G.trigger("swipeRight",[U,H,X,J,K,B]),a.swipeRight&&(i=a.swipeRight.call(G,e,U,H,X,J,K,B));break;case se:G.trigger("swipeUp",[U,H,X,J,K,B]),a.swipeUp&&(i=a.swipeUp.call(G,e,U,H,X,J,K,B));break;case de:G.trigger("swipeDown",[U,H,X,J,K,B]),a.swipeDown&&(i=a.swipeDown.call(G,e,U,H,X,J,K,B))}}}if(n==me){if(G.trigger("pinchStatus",[t,V||null,Q||0,X||0,J,F,K]),a.pinchStatus&&!1===(i=a.pinchStatus.call(G,e,t,V||null,Q||0,X||0,J,F,K)))return!1;if(t==$e&&h())switch(V){case fe:G.trigger("pinchIn",[V||null,Q||0,X||0,J,F,K]),a.pinchIn&&(i=a.pinchIn.call(G,e,V||null,Q||0,X||0,J,F,K));break;case pe:G.trigger("pinchOut",[V||null,Q||0,X||0,J,F,K]),a.pinchOut&&(i=a.pinchOut.call(G,e,V||null,Q||0,X||0,J,F,K))}}return n==we?t!==ke&&t!==$e||(clearTimeout(oe),clearTimeout(ae),T()&&!x()?(re=P(),oe=setTimeout(le.proxy(function(){re=null,G.trigger("tap",[e.target]),a.tap&&(i=a.tap.call(G,e,e.target))},this),a.doubleTapThreshold)):(re=null,G.trigger("tap",[e.target]),a.tap&&(i=a.tap.call(G,e,e.target)))):n==ye?t!==ke&&t!==$e||(clearTimeout(oe),clearTimeout(ae),re=null,G.trigger("doubletap",[e.target]),a.doubleTap&&(i=a.doubleTap.call(G,e,e.target))):n==be&&(t!==ke&&t!==$e||(clearTimeout(oe),re=null,G.trigger("longtap",[e.target]),a.longTap&&(i=a.longTap.call(G,e,e.target)))),i}function d(){var e=!0;return null!==a.threshold&&(e=H>=a.threshold),e}function f(){var e=!1;return null!==a.cancelThreshold&&null!==U&&(e=k(U)-H>=a.cancelThreshold),e}function p(){return!(a.maxTimeThreshold&&X>=a.maxTimeThreshold)}function h(){var e=w(),t=y(),n=null===a.pinchThreshold||Q>=a.pinchThreshold;return e&&t&&n}function v(){return a.pinchStatus||a.pinchIn||a.pinchOut}function g(){var e=p(),t=d(),n=w(),i=y();return!f()&&i&&n&&t&&e}function m(){return a.swipe||a.swipeStatus||a.swipeLeft||a.swipeRight||a.swipeUp||a.swipeDown}function w(){return J===a.fingers||a.fingers===Ee||!Oe}function y(){return 0!==K[0].end.x}function b(){return a.tap}function T(){return!!a.doubleTap}function x(){if(null==re)return!1;var e=P();return T()&&e-re<=a.doubleTapThreshold}function E(){ie=ne=0}function _(){var e=!1;return ne&&P()-ne<=a.fingerReleaseThreshold&&(e=!0),e}function S(e){G&&(!0===e?(G.bind(I,n),G.bind(A,i),N&&G.bind(N,o)):(G.unbind(I,n,!1),G.unbind(A,i,!1),N&&G.unbind(N,o,!1)),G.data(De+"_intouch",!0===e))}function L(e,t){var n={start:{x:0,y:0},last:{x:0,y:0},end:{x:0,y:0}};return n.start.x=n.last.x=n.end.x=t.pageX||t.clientX,n.start.y=n.last.y=n.end.y=t.pageY||t.clientY,K[e]=n}function $(e){var t=void 0!==e.identifier?e.identifier:0,n=K[t]||null;return null===n&&(n=L(t,e)),n.last.x=n.end.x,n.last.y=n.end.y,n.end.x=e.pageX||e.clientX,n.end.y=e.pageY||e.clientY,n}function k(e){if(W[e])return W[e].distance}function O(e){return{direction:e,distance:0}}function C(){return te-ee}function M(e,t){var n=Math.abs(e.x-t.x),t=Math.abs(e.y-t.y);return Math.round(Math.sqrt(n*n+t*t))}function D(e,t){if(i=t,(n=e).x==i.x&&n.y==i.y)return he;var n,i,e=(i=t,e=(t=e).x-i.x,t=i.y-t.y,e=Math.atan2(t,e),(e=Math.round(180*e/Math.PI))<0&&(e=360-Math.abs(e)),e);return e<=45&&0<=e||e<=360&&315<=e?ue:135<=e&&e<=225?ce:45<e&&e<135?de:se}function P(){return(new Date).getTime()}var a=le.extend({},a),R=Oe||Me||!a.fallbackToMouseEvents,q=R?Me?Ce?"MSPointerDown":"pointerdown":"touchstart":"mousedown",I=R?Me?Ce?"MSPointerMove":"pointermove":"touchmove":"mousemove",A=R?Me?Ce?"MSPointerUp":"pointerup":"touchend":"mouseup",N=!R||Me?"mouseleave":null,j=Me?Ce?"MSPointerCancel":"pointercancel":"touchcancel",H=0,U=null,B=null,X=0,Y=0,z=0,F=1,Q=0,V=0,W=null,G=le(e),Z="start",J=0,K={},ee=0,te=0,ne=0,ie=0,re=0,oe=null,ae=null;try{G.bind(q,t),G.bind(j,r)}catch(e){le.error("events not supported "+q+","+j+" on jQuery.swipe")}this.enable=function(){return this.disable(),G.bind(q,t),G.bind(j,r),G},this.disable=function(){return l(),G},this.destroy=function(){l(),G.data(De,null),G=null},this.option=function(e,t){if("object"==_typeof(e))a=le.extend(a,e);else if(void 0!==a[e]){if(void 0===t)return a[e];a[e]=t}else{if(!e)return a;le.error("Option "+e+" does not exist on jQuery.swipe.options")}return null}}var ue="left",ce="right",se="up",de="down",fe="in",pe="out",he="none",ve="auto",ge="swipe",me="pinch",we="tap",ye="doubletap",be="longtap",Te="horizontal",xe="vertical",Ee="all",_e=10,Se="start",Le="move",$e="end",ke="cancel",Oe="ontouchstart"in window,Ce=window.navigator.msPointerEnabled&&!window.PointerEvent&&!Oe,Me=(window.PointerEvent||window.navigator.msPointerEnabled)&&!Oe,De="TouchSwipe";le.fn.swipe=function(e){var t=le(this),n=t.data(De);if(n&&"string"==typeof e){if(n[e])return n[e].apply(n,Array.prototype.slice.call(arguments,1));le.error("Method "+e+" does not exist on jQuery.swipe")}else if(n&&"object"==_typeof(e))n.option.apply(n,arguments);else if(!(n||"object"!=_typeof(e)&&e))return function(n){return!n||void 0!==n.allowPageScroll||void 0===n.swipe&&void 0===n.swipeStatus||(n.allowPageScroll=he),void 0!==n.click&&void 0===n.tap&&(n.tap=n.click),n=n||{},n=le.extend({},le.fn.swipe.defaults,n),this.each(function(){var e=le(this),t=e.data(De);t||(t=new i(this,n),e.data(De,t))})}.apply(this,arguments);return t},le.fn.swipe.version="1.6.18",le.fn.swipe.defaults={fingers:1,threshold:75,cancelThreshold:null,pinchThreshold:20,maxTimeThreshold:null,fingerReleaseThreshold:250,longTapThreshold:500,doubleTapThreshold:200,swipe:null,swipeLeft:null,swipeRight:null,swipeUp:null,swipeDown:null,swipeStatus:null,pinchIn:null,pinchOut:null,pinchStatus:null,click:null,tap:null,doubleTap:null,longTap:null,hold:null,triggerOnTouchEnd:!0,triggerOnTouchLeave:!1,allowPageScroll:"auto",fallbackToMouseEvents:!0,excludedElements:".noSwipe",preventDefaultEvents:!0},le.fn.swipe.phases={PHASE_START:Se,PHASE_MOVE:Le,PHASE_END:$e,PHASE_CANCEL:ke},le.fn.swipe.directions={LEFT:ue,RIGHT:ce,UP:se,DOWN:de,IN:fe,OUT:pe},le.fn.swipe.pageScroll={NONE:he,HORIZONTAL:Te,VERTICAL:xe,AUTO:ve},le.fn.swipe.fingers={ONE:1,TWO:2,THREE:3,FOUR:4,FIVE:5,ALL:Ee}}),function(){function e(){(n=new ymaps.Map("map",{center:[55.748836,37.599119],zoom:13,controls:["zoomControl"]})).behaviors.disable(["rightMouseButtonMagnifier","scrollZoom"]);var t=new ymaps.GeoObjectCollection({},{iconLayout:"default#image",iconImageHref:"./img/icons/marker.svg",iconImageSize:[46,57],iconImageOffset:[-35,-52]});[[55.751999,37.576133],[55.760435,37.622435],[55.748836,37.599119],[55.734093,37.577385]].forEach(function(e){t.add(new ymaps.Placemark(e))}),n.geoObjects.add(t)}var n;setTimeout(function(){ymaps.ready(e)},2500)}(),function(){function t(){n.classList.toggle("fullscreen-menu--active"),o.classList.toggle("body--active")}var e=document.querySelector("#hamburger"),n=document.querySelector(".fullscreen-menu"),i=document.querySelector("#close"),r=document.querySelectorAll(".menu__link"),o=document.querySelector("body");e.addEventListener("click",t),i.addEventListener("click",t),r.forEach(function(e){e.addEventListener("click",t)})}(),function(){var n=$("section"),i=$(".maincontent"),r=$(".fixed-menu"),t=$(".fixed-menu__item"),o="section--active",a="fixed-menu--dark",e=new MobileDetect(window.navigator.userAgent).mobile(),l=!1;n.eq(0).addClass(o);function u(e,t){return e.filter(".".concat(t)).index()}function c(e,t,n){e.removeClass(n),e.eq(t).addClass(n)}function s(e){c(n,e,o),c(t,e,"fixed-menu__item--active")}function d(e){var t=function(e){e*=-100;return isNaN(e)?(console.log("передан неверное значение в calcSectionPosition"),0):e}(e);i.css({transform:"translateY(".concat(t,"%)")}),e=e,"dark"==n.eq(e).attr("data-sidemenu-theme")?r.addClass(a):r.removeClass(a)}function f(){return{next:function(){var e=u(n,o);e!==n.length-1&&(l=!0,s(++e),d(e))},prev:function(){var e=u(n,o);0!==e&&(l=!0,s(--e),d(e))}}}document.addEventListener("wheel",function(e){var t=f();0<e.deltaY&&!l?t.next():e.deltaY<0&&!l&&t.prev()}),$(window).on("keydown",function(e){var t=e.target.tagName.toLowerCase(),n=f();if(!("input"===t||"textarea"===t))switch(e.keyCode){case 38:n.prev();break;case 40:n.next()}}),$("[data-scroll-to]").on("click",function(e){e.preventDefault();e=$(e.currentTarget).attr("data-scroll-to"),e=$("[data-section-id = ".concat(e,"]")).index();s(e),d(e)}),$(window).on("transitionend",function(){return l=!1}),e&&($(".wrapper").on("touchmove",function(e){e.preventDefault()}),$("body").swipe({swipe:function(e,t){var n=f();"down"===t&&n["prev"](),"up"===t&&n["next"]()}}))}(),function(){var a=document.querySelector("#deliveryForm"),l=(document.querySelector("#deliverySend"),document.querySelector(".message"),document.querySelector(".message__text")),e=document.querySelector(".message__close-btn");a.addEventListener("submit",function(e){e.preventDefault();var t,n=a.elements.name,i=a.elements.phone,r=a.elements.comment,o=a.elements.to,e={name:n.value,phone:i.value,comment:r.value,to:o.value},o=[n,i,r,o];o.filter(function(e){return""!==e.value.trim()?(e.style.border="3px solid transparent",e):void(e.style.border="3px solid red")}).length===o.length&&((t=new XMLHttpRequest).responseType="json",t.open("POST","https://webdev-api.loftschool.com/sendmail"),t.setRequestHeader("content-type","application/json"),t.send(JSON.stringify(e)),t.addEventListener("load",function(){l.innerText=t.response.message,400<t.status?l.classList.add("error"):l.classList.remove("error"),$.fancybox.open({src:"#message",type:"inline"}),a.reset()}))}),e.addEventListener("click",function(e){e.preventDefault(),$.fancybox.close()})}(),function(){var t=$(".slider__list").bxSlider({pager:!1,controls:!1});$("#sliderArrowLeft").on("click",function(e){e.preventDefault(),t.goToPrevSlide()}),$("#sliderArrowRight").on("click",function(e){e.preventDefault(),t.goToNextSlide()}),$(window).on("load",function(){setTimeout(t.reloadSlider(),1e3)})}(),function(){var i=$(".review"),e=$(".reviews__switch-item");i.eq(0).addClass("review__item--active"),e.eq(0).addClass("interactive-avatar--active"),e.on("click",function(e){var t=$(this),n=t.index();e.preventDefault(),t.addClass("interactive-avatar--active").siblings().removeClass("interactive-avatar--active"),i.eq(n).addClass("review__item--active").siblings().removeClass("review__item--active")})}(),setTimeout(function(){$().ready(function(){var o,e=$(".play__button"),a=$(".player"),l=document.getElementById("playerVideo"),u=document.getElementById("volumeRange"),t=$(".volume__icon-wrapper"),n=new MobileDetect(window.navigator.userAgent).mobile(),c=document.getElementById("playbackRange");c.min=0,c.value=0,c.max=100,u.min=0,u.max=10,u.value=5;function i(){clearInterval(o)}function r(){l.paused?(l.play(),a.addClass("paused"),o=setInterval(function(){f()},1e3)):(l.pause(),a.removeClass("paused"),i())}function s(){a.hasClass("muted")||(l.volume=u.value/10)}function d(e){for(var n=(e.pageX-c.getBoundingClientRect().left)/(c.getBoundingClientRect().right-c.getBoundingClientRect().left),t=[],i=0;i<101;i++)t.push(1/99*i);var e=t.slice(),r=t.sort(function(e,t){return Math.abs(n-e)-Math.abs(n-t)})[0];c.value=e.indexOf(r)+1,l.currentTime=c.value/100*l.duration,o=setInterval(function(){f()},1e3/66)}var f=function(){c.value=l.currentTime/l.duration*100};e.each(function(){$(this).on("click",function(e){e.preventDefault(),r()})}),l.addEventListener("click",function(){r()}),l.addEventListener("ended",function(){a.removeClass("paused"),i(),l.load(),c.value=0}),navigator.platform.match(/iPhone|iPod|iPad/)&&(c.addEventListener("touchend",d,{passive:!0}),u.addEventListener("touchend",function(e){var n=(e.pageX-u.getBoundingClientRect().left)/(u.getBoundingClientRect().right-u.getBoundingClientRect().left),t=[];for(var i=0;i<11;i++)t.push(1/9*i);var e=t.slice(),r=t.sort(function(e,t){return Math.abs(n-e)-Math.abs(n-t)})[0];u.value=e.indexOf(r)+1,a.hasClass("muted")||(l.volume=u.value/10)},{passive:!0})),n&&!navigator.platform.match(/iPhone|iPod|iPad/)&&(c.addEventListener("touchstart",i),c.addEventListener("touchend",function(){l.currentTime=c.value/100*l.duration,o=setInterval(function(){f()},1e3/66)}),u.addEventListener("touchend",s)),c.addEventListener("click",d),c.addEventListener("mousedown",function(e){i()}),u.addEventListener("click",s),u.addEventListener("mousemove",s),t.on("click",function(){l.volume?l.volume=0:l.volume=u.value/10,a.toggleClass("muted")})})},2e3);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
